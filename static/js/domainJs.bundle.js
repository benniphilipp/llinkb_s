/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/js/domain/domain.js":
/*!************************************!*\
  !*** ./assets/js/domain/domain.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _module_DomainCrund__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./module/DomainCrund */ \"./assets/js/domain/module/DomainCrund.js\");\n/* harmony import */ var _module_DomainCheckout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./module/DomainCheckout */ \"./assets/js/domain/module/DomainCheckout.js\");\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const domaincrund = new _module_DomainCrund__WEBPACK_IMPORTED_MODULE_0__[\"default\"](); \n    const domaincheckout = new _module_DomainCheckout__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n});\n\n//# sourceURL=webpack://src/./assets/js/domain/domain.js?");

/***/ }),

/***/ "./assets/js/domain/module/DomainCheckout.js":
/*!***************************************************!*\
  !*** ./assets/js/domain/module/DomainCheckout.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\nclass DomainCheckout {\n\n    constructor(){\n\n        const dataUrl = document.querySelector('#DomainCheckoutView');\n\n        if(dataUrl){\n            this.ShoppingCard(dataUrl.value);\n        }\n        \n    }\n\n    ShoppingCard(dataUrl){\n        $.ajax({\n            url:dataUrl,\n            type: 'GET',\n            dataType: 'json',\n            success: (response) => {\n    \n                const data = response.data;\n                const total_price = response.total_price;\n                const shopping_id = response.shopping_id;\n                const tax_price = response.tax_price;\n                const email = response.email;\n                const url = response.url;\n\n                const priceCalculate = document.querySelector('#priceCalculate');\n                const priceDiv = document.createElement('div');\n\n                priceDiv.innerHTML = `\n                    <hr class=\"m-0 p-0\">\n                    <div class=\"d-flex justify-content-between align-items-baseline px-2 mt-3\">\n                        <span class=\"fs-5\">Tax</span>\n                        <span class=\"fs-5\">20 %</span>\n                    </div>\n                    <div class=\"d-flex justify-content-between align-items-baseline px-2\">\n                        <span class=\"fs-5\">Summe</span>\n                        <span class=\"fs-5\">${total_price}</span>\n                        <div id=\"dataShoppingId\" data-shopping-id=\"${shopping_id}\" class=\"d-none\"></div> \n                        <div id=\"userEmail\" data-user-email=\"${email}\" class=\"d-none\"></div> \n                        <div id=\"UrlData\" data-url=\"${url}\" class=\"d-none\"></div> \n                    </div>\n                `;\n\n                priceCalculate.appendChild(priceDiv);\n\n\n                const shoppingCardValues = document.querySelector('#shoppingCardValues');\n\n                    data.forEach(element => {\n                        const domainDiv = document.createElement('div');\n                        domainDiv.innerHTML = `\n                            <div class=\"shopping-card d-flex w-100 mt-3\">\n                                <div class=\"domain-icon d-flex align-items-center\">\n                                    <i class=\"fa-solid fa-globe\"></i>\n                                </div>\n                                <div class=\"domain-card d-flex flex-column w-100 mx-3\">\n                                    <span><h5>${element.card__products__domain}</h5></span>\n                                    <span><small>.AT Domain Registration</small></span>\n                                    <span><small>1 Year</small></span>\n                                    <div class=\"price d-flex justify-content-between w-100 align-items-center\">\n                                        <small>Renews ${element.date} for</small>\n                                        <span class=\"price_normal\">${element.card__products__price}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        `;\n                        shoppingCardValues.appendChild(domainDiv);\n                    });\n\n                }\n\n        });\n    }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DomainCheckout);\n\n//# sourceURL=webpack://src/./assets/js/domain/module/DomainCheckout.js?");

/***/ }),

/***/ "./assets/js/domain/module/DomainCrund.js":
/*!************************************************!*\
  !*** ./assets/js/domain/module/DomainCrund.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _linkinbio_module_getCookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../linkinbio/module/getCookie */ \"./assets/js/linkinbio/module/getCookie.js\");\n/* harmony import */ var _linkinbio_module_lsToast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../linkinbio/module/lsToast */ \"./assets/js/linkinbio/module/lsToast.js\");\n\n\n\n\nclass DomainCrud {\n\n    constructor(){\n\n        this.csrftoken = (0,_linkinbio_module_getCookie__WEBPACK_IMPORTED_MODULE_0__.getCookie)('csrftoken');\n\n        const SerachDomainBtn = document.querySelector('#SerachDomain');\n        if(SerachDomainBtn){\n            SerachDomainBtn.addEventListener('click', this.DomainSearch.bind(this));\n        }\n\n        const autocompleteInput = document.querySelector('#autocomplete');\n        if (autocompleteInput) {\n            const self = this;\n            autocompleteInput.addEventListener('input', function(event) {\n                const value = event.target.value;\n                self.AutocompleteLts(value);\n            });\n        }\n\n        const self = this;\n        const domainContainer = document.querySelector('#domainContainer');\n        if(domainContainer){\n            domainContainer.addEventListener('click', function (event) {\n                if (event.target.classList.contains('addShoppingCard')) {\n                    const clickedListItem = event.target;\n                    const dataDomainPrice = clickedListItem.getAttribute('data-domain-price');\n                    const dataDomain = clickedListItem.getAttribute('data-domain');\n                    self.AddWishlist(dataDomainPrice, dataDomain);\n                }\n              });\n        }\n\n        // Trash Domain Wishlist\n        const TrashDomain = document.querySelector('#ShoppingTrash');\n        if(TrashDomain){\n\n            // View Wishlist\n            this.ViewWishlist();\n\n            TrashDomain.addEventListener('click', function (event) {\n                if (event.target.classList.contains('trash-domain')) {\n                    const clickedListItem = event.target;\n                    const dataDomainTrash = clickedListItem.getAttribute('data-trash-domain');\n                    self.RemoveWishlist(dataDomainTrash);\n                }\n            });\n        }\n\n        // Open Chackout\n        const OpenShopping = document.querySelector('#OpenShopping');\n        if(OpenShopping){\n            OpenShopping.addEventListener('click', this.OpenChackout.bind(this));\n        }\n\n\n        // CheckUser Crate ShoppingCard\n\n        // CheckUserCrateShoppingCard\n        const FormSubmit = document.querySelector('#FormSubmit');\n        if(FormSubmit){\n            FormSubmit.addEventListener('click', this.CheckUserCrateShoppingCard.bind(this))\n        }\n\n        //\n        const inputFields = document.querySelectorAll('.form-control');\n        if (inputFields) {\n            inputFields.forEach(inputField => {\n                inputField.addEventListener('input', this.handleKeyPress.bind(this));\n            });\n        }\n\n\n        //https://app.vatcheckapi.com/api-keys\n\n\n    }\n\n\n    CheckUserCrateShoppingCard(event){\n        event.preventDefault();\n        const dataURL = document.querySelector('#CrateSubaccountAndShoppingCard').value;\n\n        const FormSubmit = document.querySelector('#FormSubmit');\n        FormSubmit.disabled = true;\n        \n        const emailInput = document.getElementById('email');\n        const addressInput = document.getElementById('address');\n        const zipCodeInput = document.getElementById('zip_code');\n        const cityInput = document.getElementById('city');\n        const firstNameInput = document.getElementById('firstname');\n        const lastNameInput = document.getElementById('lastname');\n        const passwort = document.querySelector('#passwort');\n\n        const element = document.getElementById('FormSubmit');\n        const wishlistId = element.getAttribute('data-wishlist-id');\n        console.log(wishlistId)\n\n        const fd = new FormData();\n        fd.append('email', emailInput.value);\n        fd.append('address', addressInput.value);\n        fd.append('zip_code', zipCodeInput.value);\n        fd.append('city', cityInput.value);\n        fd.append('firstname', firstNameInput.value);\n        fd.append('lastname', lastNameInput.value);\n        fd.append('passwort', passwort.value);\n        fd.append('wishlistId', wishlistId);\n\n        $.ajax({\n            url:dataURL,\n            type: 'POST',\n            data: fd,\n            dataType: 'json',\n            headers: {\n                'X-CSRFToken': this.csrftoken,\n            },\n            success: (data) => {\n                console.log(data)\n\n                if (data.redirect) {\n                    window.location.href = data.redirect;\n                } else {\n                    // Handle other responses if needed\n                }\n\n            },\n            error: (error) => {\n                console.log(error)\n            },\n            cache: false,\n            contentType: false,\n            processData: false,\n        })\n\n    }\n\n\n    //\n    handleKeyPress(event) {\n        const inputId = event.target.id;\n        const inputValue = event.target.value.trim();\n        const FormSubmit = document.querySelector('#FormSubmit');\n\n        if (!inputValue) {\n            // Füge eine CSS-Klasse hinzu, um leere Felder zu markieren\n            event.target.style.border = '1px solid red';\n        } else {\n            // Entferne die CSS-Klasse, wenn das Feld einen Wert hat\n            event.target.style.border = '1px solid #ced4da';\n        }\n\n\n        // Überprüfe alle Eingabefelder auf leere Werte\n        const inputFields = document.querySelectorAll('.field-shop');\n\n        let areAllFieldsFilled = true;\n\n        for (const field of inputFields) {\n            if (field.value.trim() === '' || field.value === null) {\n                areAllFieldsFilled = false;\n                break;\n            }\n        }\n\n        // Aktualisiere den Status des Formular-Submit-Buttons basierend auf den leeren Feldern\n        if (areAllFieldsFilled) {\n            FormSubmit.disabled = false;\n        } else {\n            FormSubmit.disabled = true;\n        }\n\n\n    }\n\n\n    // Open Chackout\n    OpenChackout(event){\n        event.preventDefault();\n        $('#exampleOpenShopping').modal('show');\n\n        const dataURL = document.querySelector('#CrateSubaccountAndShoppingCard').value;\n\n        $.ajax({\n            url: dataURL,\n            type: 'GET',\n            dataType: 'json',\n            success: (data) => {\n\n                const emailInput = document.getElementById('email');\n                const addressInput = document.getElementById('address');\n                const zipCodeInput = document.getElementById('zip_code');\n                const cityInput = document.getElementById('city');\n                const firstNameInput = document.getElementById('firstname');\n                const lastNameInput = document.getElementById('lastname');\n\n                emailInput.value = data[0].email;\n                addressInput.value = data[0].address;\n                zipCodeInput.value = data[0].zip_code;\n                cityInput.value = data[0].city;\n                firstNameInput.value = data[0].first_name;\n                lastNameInput.value = data[0].last_name;\n\n                // const idMapping = {\n                //     'email': 'email',\n                //     'address': 'address',\n                //     'zip_code': 'zip_code',\n                //     'city': 'city',\n                //     'firstname': 'firstname_',\n                //     'lastname': 'lastname_'\n                // };\n                \n            },\n            error: (error) => {\n                console.log(error);\n            }\n        });\n\n    }\n\n    // View Wishlist\n    ViewWishlist(){\n\n        const DataURL = document.querySelector('#AddWishlistView').value;\n        $.ajax({\n            url:DataURL,\n            type: 'GET',\n            dataType: 'json',\n            success: (data) => {\n                \n                const element = document.getElementById('FormSubmit');\n                element.setAttribute('data-wishlist-id', data[0].wishlist_id);\n\n                const ShoppingTrash = document.querySelector('#ShoppingTrash');\n\n                while (ShoppingTrash.firstChild) {\n                    ShoppingTrash.removeChild(ShoppingTrash.firstChild);\n                }\n\n                data.forEach(wishlistData => {\n                    const wishlistDiv = document.createElement('div');\n                    wishlistDiv.innerHTML = `\n                    <div class=\"shopping-card d-flex w-100 mt-3\">\n                        <div class=\"domain-icon d-flex align-items-center\">\n                            <i class=\"fa-solid fa-globe\"></i>\n                        </div>\n                        <div class=\"domain-card d-flex flex-column w-100 mx-3\">\n                            <span><h5>${wishlistData.product}</h5></span>\n                            <span><small>.AT Domain Registration</small></span>\n                            <span><small>1 Year</small></span>\n                            <div class=\"price d-flex justify-content-between w-100 align-items-center\">\n                                <small>Renews ${wishlistData.date} for</small>\n                                <span class=\"price_normal\">${wishlistData.price}</span>\n                                <span><i class=\"fa-solid fa-trash-can trash-domain\" data-trash-domain=\"${wishlistData.id}\"></i></span>\n                            </div>\n                        </div>\n                    </div>\n\n                    `;\n                    ShoppingTrash.appendChild(wishlistDiv)\n                });\n\n                \n\n            },\n            error: (error) => {\n                console.log(error);\n            }\n        })\n\n    }\n\n\n    // Remove Wishlist Card\n    RemoveWishlist(dataDomainTrash){\n        console.log(dataDomainTrash)\n        const self = this;\n        const DataDelete = document.querySelector('#AddWishlistView').value;\n        const deleteUrl = `${DataDelete}?id=${dataDomainTrash}`;\n\n        $.ajax({\n            url: deleteUrl,\n            type: 'DELETE',\n            dataType: 'json',\n            headers: {\n                'X-CSRFToken': this.csrftoken,\n                'Content-Type': 'application/json',\n            },\n            success: (data) => {\n                self.ViewWishlist();\n                (0,_linkinbio_module_lsToast__WEBPACK_IMPORTED_MODULE_1__.lsToast)(data.message);\n            },\n            error: (error) => {\n                console.log(error);\n            },\n            cache: false,\n            contentType: false,\n            processData: false,\n        });\n\n    }\n\n    // Add Wishlist Card\n    AddWishlist(dataDomainPrice, dataDomain){\n        const self = this;\n        const DataUrl = document.querySelector('#AddWishlistView').value;\n\n        const fd = new FormData();\n        fd.append('price', dataDomainPrice);\n        fd.append('domain', dataDomain)\n\n        $.ajax({\n            url: DataUrl,\n            type: 'POST',\n            data: fd,\n            dataType: 'json',\n            cache: false,\n            contentType: false,\n            processData: false,\n            headers: {\n                'X-CSRFToken': this.csrftoken,\n            },\n            success: (data) => {\n                self.ViewWishlist();\n                (0,_linkinbio_module_lsToast__WEBPACK_IMPORTED_MODULE_1__.lsToast)(data.success);\n            },\n            error: (error) => {\n                console.log(error);\n            }\n        })\n\n    }\n\n\n    AutocompleteLts() {\n\n        this.autocompleteInstance = new Autocomplete('#autocomplete', {\n            search: input => {\n                if (input.length < 1) {\n                    return Promise.resolve([]);\n                }\n    \n                const DataURL = document.querySelector('#SearchDomainView').value;\n\n                return fetch(DataURL, {\n                    method: 'POST',\n                    headers: {\n                        'X-CSRFToken': this.csrftoken,\n                    },\n                })\n                .then(response => response.json())\n                .then(data => {\n                    // Extrahiere die relevanten Daten für Autocomplete\n                    const autocompleteData = data.map(item => item.name); // Passe dies entsprechend deiner Datenstruktur an\n                    // return autocompleteData;\n\n                    const filteredData = autocompleteData.filter(item => {\n                        return item.toLowerCase().includes(input.toLowerCase());\n                    });\n    \n                    return filteredData;\n\n                })\n                .catch(error => {\n                    console.error('Fehler beim Abrufen der Daten:', error);\n                    return [];\n                });\n            },\n\n            getResultValue: result => result,\n\n\n        });\n    }\n    \n    // Suche\n    DomainSearch(){\n        \n        const domainContainer = document.querySelector('#domainContainer');\n\n        while (domainContainer.firstChild) {\n            domainContainer.removeChild(domainContainer.firstChild);\n        }\n\n        const SearchValue = document.querySelector('#SearchValue').value;\n\n        const tlsValue = document.querySelector('#tls').value;\n\n        const SearchDomainView = document.querySelector('#SearchDomainView');\n        const DataURL = SearchDomainView.value;\n        \n        const fd = new FormData();\n        fd.append('url', SearchValue);\n        fd.append('lts', tlsValue);\n\n        $.ajax({\n            url: DataURL,\n            type: 'POST',\n            dataType: 'json',\n            data: fd,\n            cache: false,\n            contentType: false,\n            processData: false,\n            headers: {\n                'X-CSRFToken': this.csrftoken,\n            },\n            success: (data) => {\n                console.log(data)\n\n                if(data.data_available.available == true){\n\n                    const domainData = data.data_available;\n\n                    const parts = domainData.price.toString().split('.');\n                    const euros = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n                    const cents = parts[1] ? ',' + parts[1] : ',00';\n\n                    domainContainer.innerHTML = `\n                    <div class=\"card shadow-sm p-2 mt-3 ${domainData.domain? 'border-success' : 'border-0'}\">\n                        <div class=\"card-body\">\n\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div class=\"domain-div d-flex flex-column\">\n                                    <span class=\"premium\">PREMIUM</span>\n                                    <span data-domain=\"${domainData.domain}\" class=\"domain\">${domainData.domain}</span>\n                                </div>\n                                <div class=\"d-flex justify-content-between align-items-center\">\n                                    <div class=\"domain-price d-flex flex-column\">\n                                        <span class=\"price\">${euros + cents + ' €'}</span>\n                                        <span class=\"time\">for first year</span>\n                                    </div>\n                                    <div class=\"domain-shop d-flex align-items-center addShoppingCard\">\n                                        <i class=\"fa-solid fa-cart-plus addShoppingCard\" data-domain-price=\"${domainData.price}\" data-domain=\"${domainData.domain}\"></i>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    `;\n\n                }else{\n\n                    const domainData = data.data_available;\n                    domainContainer.innerHTML = `\n                    <div class=\"card ${domainData.domain? 'border-danger' : 'border-0'} shadow-sm p-2\">\n                        <div class=\"card-body\">\n\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div class=\"domain-div d-flex flex-column\">\n                                    <span class=\"premium\">PREMIUM</span>\n                                    <span data-domain=\"${domainData.domain}\" class=\"domain\">${domainData.domain}</span>\n                                </div>\n                                <div class=\"d-flex justify-content-between align-items-center\">\n                                    <div class=\"domain-price d-flex flex-column\">\n                                        DOMAIN TAKEN\n                                    </div>\n                                    <div class=\"domain-shop d-flex align-items-center NoShopping\">\n                                        <i class=\"fa-solid fa-ban\"></i>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    `;\n\n                }\n\n\n                data.available_domains.forEach(domainData => {\n                    // Erstelle ein neues Div-Element für jede Domain\n                    const domainDiv = document.createElement('div');\n\n                    const parts = domainData.price.toString().split('.');\n                    const euros = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n                    const cents = parts[1] ? ',' + parts[1] : ',00';\n                \n                    // Fülle das Div-Element mit den Informationen der Domain\n                    domainDiv.innerHTML = `\n                    <div class=\"card shadow-sm p-2 mt-3 ${domainData.domain? 'border-success' : 'border-0'}\">\n                        <div class=\"card-body\">\n\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div class=\"domain-div d-flex flex-column\">\n                                    <span class=\"premium\">PREMIUM</span>\n                                    <span data-domain=\"${domainData.domain}\" class=\"domain\">${domainData.domain}</span>\n                                </div>\n                                <div class=\"d-flex justify-content-between align-items-center\">\n                                    <div class=\"domain-price d-flex flex-column\">\n                                        <span data-domain-price=\"${domainData.price}\" class=\"price\">${euros + cents + ' €'}</span>\n                                        <span class=\"time\">for first year</span>\n                                    </div>\n                                    <div class=\"domain-shop d-flex align-items-center\">\n                                        <i class=\"fa-solid fa-cart-plus addShoppingCard\" data-domain-price=\"${domainData.price}\" data-domain=\"${domainData.domain}\"></i>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    `;\n                \n                    domainContainer.appendChild(domainDiv);\n                });\n\n\n            },\n            error: (error) => {\n                console.log(error);\n            }\n        });\n\n    }\n\n\n\n\n\n    Test(){\n\n        $.ajax({\n            url: 'http://127.0.0.1:8000/domain/list/',\n            type: 'GET',\n            dataType: 'json', // Wenn Ihre Ansicht JSON zurückgibt\n            success: (response) => {\n                //console.log(response);\n\n                setTimeout(()=>{\n\n                    const domainText = document.querySelector('#domainText');\n                    domainText.classList.add('d-none');\n\n                    const waitImage = document.querySelector('#waitImage');\n                    waitImage.classList.add('d-none');\n\n                    const domainContainer = document.querySelector('#domainContainer');\n                    domainContainer.classList.remove('d-none');\n\n                    const table = document.getElementById(\"domainTable\");\n                    const domains = response;\n                    \n                    domains.forEach((domainData) => {\n                        const row = table.insertRow(-1);\n                        const domainCell = row.insertCell(0);\n                        domainCell.innerHTML = domainData.domain; // Hier den Domänennamen einfügen\n    \n                        // Verfügbarkeits-Spalte\n                        const availabilityCell = row.insertCell(1);\n                        availabilityCell.innerHTML = \"Verfügbar\";\n    \n                        // Button-Spalte\n                        const actionCell = row.insertCell(2);\n                        const button = document.createElement(\"button\");\n                        button.type = \"button\";\n                        button.className = \"btn btn-primary btn-sm\";\n                        button.textContent = \"Aktion ausführen\";\n                        actionCell.className = \"d-flex justify-content-start\";\n                        actionCell.appendChild(button);\n\n                    });\n                }, 2000)\n\n\n            },\n            error: (error) => {\n              console.error('Fehler:', error);\n            }\n          });\n\n    }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DomainCrud);\n\n\n\n\n// setTimeout(() => {\n//     data.forEach(item => {\n//         // Jetzt kannst du auf die Schlüssel-Wert-Paare jedes Objekts zugreifen\n//         const keysToCheck = ['firstname_', 'lastname_', 'email', 'address', 'zip_code', 'city'];\n\n//         keysToCheck.forEach(key => {\n//             if (item[key] === null || item[key] === undefined) {\n\n//                 const inputValue = item[key] || '';\n\n//                 const inputId = idMapping[key];\n//                 const inputElement = document.getElementById(key);\n\n//                 if (inputElement) {\n                \n//                     if (!inputValue.trim()) {\n//                         // Füge eine CSS-Klasse hinzu, um leere Felder zu markieren\n//                         inputElement.style.border = '1px solid red';\n//                     } else {\n//                         // Entferne die CSS-Klasse, wenn das Feld einen Wert hat\n//                         inputElement.style.border = '1px solid #ced4da'\n//                     }\n//                 }\n\n//             }\n//         });\n//     });\n// })\n\n//# sourceURL=webpack://src/./assets/js/domain/module/DomainCrund.js?");

/***/ }),

/***/ "./assets/js/linkinbio/module/getCookie.js":
/*!*************************************************!*\
  !*** ./assets/js/linkinbio/module/getCookie.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCookie: () => (/* binding */ getCookie)\n/* harmony export */ });\n\nfunction getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n//# sourceURL=webpack://src/./assets/js/linkinbio/module/getCookie.js?");

/***/ }),

/***/ "./assets/js/linkinbio/module/lsToast.js":
/*!***********************************************!*\
  !*** ./assets/js/linkinbio/module/lsToast.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearContent: () => (/* binding */ clearContent),\n/* harmony export */   lsToast: () => (/* binding */ lsToast)\n/* harmony export */ });\n/* Alert Box Close */\nfunction clearContent() {\n    setTimeout(function() {\n        $('#toast-alert').html('');\n    }, 4000);\n}\n\n/* Alert Box */\nfunction lsToast(parmToast) {\n    const Report = gettext('Report');\n    $('#toast-alert').html(`\n        <div class=\"ls-toast\" id=\"ls-toas\">\n            <div class=\"ls-toas-header d-flex justify-content-start align-items-center px-2 py-2\">\n                <svg class=\"bd-placeholder-img rounded me-2\" width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\"><rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect></svg>\n                <span><b>${Report}</b></span>\n                <i class=\"fa-solid fa-xmark ms-auto\"></i>\n            </div>\n            <hr>\n            <div class=\"ls-toas-body p-2\">\n                ${parmToast}\n            </div>\n        </div>\n    `);\n    clearContent();\n}\n\n//# sourceURL=webpack://src/./assets/js/linkinbio/module/lsToast.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./assets/js/domain/domain.js");
/******/ 	
/******/ })()
;